You are given a non-negative number represented as an array of digits.

Example: 123 is represented as [1,2,3]

You must add 1 to the number ( increment the number represented by the digits ) and return the required array or list.

The digits are stored such that the most significant digit is at the head of the list.

Example:

If the vector has [1, 2, 3], the returned vector should be [1, 2, 4],

as 123 + 1 = 124.

Some notes:

Your returned array must not have any leading zeros. Example:
Input:
[0,0,2,1]
 
Ouput:
[2,2] // no leading zeros
Maximum size of the array is 300 so avoid converting it to a string or an integer. Instead, try to think of what happens when 1 is added to the number.


*********CODE*********

class Solution:
    def plusOne(self, A):
        # write your method here
        def adde(a):
            k=0
            w=1
            while w:
                t=a[k]
                a[k]=t%10
                k+=1
                if k < len(a):
                    a[k] += 1
                    if a[k]>9:
                        continue
                    else:
                        w=0
                else:
                    a.append(1)
                    w=0
            return a
        p=A[-1]+1
        A.pop()
        A.append(p)
        while A[0]==0:
            A.pop(0)
        if p>9:
            A.reverse()
            la=adde(A)
            la.reverse()
            return la
        else:
            return A
            
 L = list(map(int,input().split()))
 s = Solution()
 print(s.plusOne(L))

You are given an array A of length N and Q tasks,
Each task is of the following type:

L R V: Apply the bitwise-and operator with V for all A[i], where L <= i <= R

You need to print the array after performing all the tasks.


Input format:

First line contains T, the number of test cases. Each test case contains:
First line: Two Integers N (denoting the length of the array) and Q (denoting the number of tasks)
Second line: N space-separated elements of the array
Each of the following Q lines contains a task in the described format
Output format:

Print the final array after performing all the Q tasks.

Constraints:

1<= N < =10^6

Output format:

Print the final array after performing all the Q tasks.

Constraints

1 <=N<=105
1<=Q<=2*105
1<= A[i] , V <=109
1<=L<=R<=N
Sample Input:

1
5 2
7 7 7 7 7
1 3 4
1 5 6
Sample Output:

4 4 4 6 6

Explanation:

After first task, the array will be (4,4,4,7,7)
After second task, the array will be (4,4,4,6,6).


*********CODE*********

T = int(input())
for t in range(T):
    nq = list(map(int,input().split()))
    N, Q = nq[0], nq[1]
    te = [1]*N
    arr = list(map(int,input().split()))[:N]
    for i in range(Q):
        t = list(map(int,input().split()))[:3]
        L, R, V = t[0], t[1], t[2]
        j = L-1
        if sum(te[j:R])==0:
            continue
        for i in range(j,R):
            arr[i] = arr[i] & V
            if arr[i]==0:
                te[i] = 0
    print(*arr)

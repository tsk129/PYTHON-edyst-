You are given an array of N integers, A1, A2 ,…, AN. Return maximum value of f(i, j) for all 1 ≤ i, j ≤ N.
f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.

For example,

A=[1, 3, -1]
 
f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5
 
So, we return 5.


*********CODE*********

from itertools import combinations_with_replacement as comb
class Solution:
    def maxArr(self, A):
        # write your method here
#        n = int(input())
 #       m = list(map(int, input().split()))[:n]
        p = [i for i in range(len(A))]
        k = comb(p,2)
        arr = [i for i in k]
        mv = 0
        for e in arr:
            diff = abs(A[e[0]] - A[e[1]]) + abs(e[0] - e[1])
            if diff > mv:
                mv = diff
        return mv
        
L = list(map(int,input().split()))
s = Solution()
print(s.maxArr(L))
